version: '3.8'

services:
  app:
    build:
      context: .
      target: final
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    secrets:
      - gemini_api_key
      - youtube_api_key
      - openai_api_key
    depends_on:
      - postgres
      - redis
    volumes:
      - app_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  nginx:
    build:
      context: .
      target: nginx-stage
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  celery:
    build:
      context: .
      target: final
    command: celery -A app.tasks.celery_app worker --loglevel=info --concurrency=4
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    secrets:
      - gemini_api_key
      - youtube_api_key
      - openai_api_key
    depends_on:
      - postgres
      - redis
    volumes:
      - app_data:/app/data
    restart: unless-stopped

  celery-beat:
    build:
      context: .
      target: final
    command: celery -A app.tasks.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - postgres
      - redis
    volumes:
      - app_data:/app/data
    restart: unless-stopped

  flower:
    build:
      context: .
      target: final
    command: celery -A app.tasks.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - redis
    restart: unless-stopped

secrets:
  gemini_api_key:
    file: ./secrets/gemini_api_key.txt
  youtube_api_key:
    file: ./secrets/youtube_api_key.txt
  openai_api_key:
    file: ./secrets/openai_api_key.txt

volumes:
  postgres_data:
  redis_data:
  app_data:

networks:
  default:
    driver: bridge
